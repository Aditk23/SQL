USE TEST;


SELECT * FROM EMP;
SELECT * FROM EMP_SAL;

SELECT * FROM EMP_SAL
WHERE SALARY > (SELECT AVG(SALARY) FROM EMP_SAL);

select eid, dept, SALARY from emp_sal S 
where SALARY > (select avg(SALARY) from emp_sal 
where dept=S.DEPT);


WHERE DEPT='HR';

SELECT * FROM EMP_SAL
WHERE SALARY >=(SELECT AVG(SALARY) FROM EMP_SAL
WHERE DEPT='OPS')  AND DEPT = 'OPS';

SELECT AVG(SALARY) FROM EMP_SAL
WHERE DEPT='OPS';

-- FOR ALL DEPT
SELECT * FROM EMP_SAL
WHERE SALARY >=(SELECT AVG(SALARY) FROM EMP_SAL 
WHERE DEPT IN (SELECT DEPT FROM EMP_SAL
WHERE EID = (SELECT EID FROM EMP
WHERE NAME = 'Ramesh Gupta'))) AND DEPT = (SELECT DEPT FROM EMP_SAL
WHERE EID = (SELECT EID FROM EMP
WHERE NAME = 'Ramesh Gupta'));


select eid, dept, SALARY from emp_sal  
where SALARY > (select avg(SALARY) from emp_sal 
where dept=EMP_SAL.DEPT) ;

SELECT DEPT, AVG(SALARY) FROM EMP_SAL
GROUP BY DEPT;


USE LEARN8;

SELECT * FROM EMP;

DROP TABLE EMP2;
CREATE TABLE EMP2
(RNO INT IDENTITY (1,1), -- START, INCREMENT
NAME VARCHAR(20),
AGE INT);

INSERT INTO EMP2 (NAME , AGE)
VALUES ('AJAY', 15);

INSERT INTO EMP2 
VALUES ('ROBERT', 16);

INSERT INTO EMP2 
VALUES ('KABEER', 14);

INSERT INTO EMP2 
VALUES ('AJIT', 14);


SELECT * FROM EMP2;

DELETE FROM EMP2 
WHERE RNO=3;


-- SEQUENCE

DROP SEQUENCE MYSEQ;

CREATE SEQUENCE MYSEQ
AS INT
START WITH 1
INCREMENT BY 1
MAXVALUE 10
MINVALUE 1
CYCLE
CACHE 5;

SELECT NEXT VALUE FOR MYSEQ;
DROP SEQUENCE MYSEQ;

CREATE SEQUENCE MYSEQ
AS INT
START WITH 1
INCREMENT BY 1;

DROP TABLE EMP2;
CREATE TABLE EMP2
(RNO INT,
NAME VARCHAR(20),
AGE INT);

INSERT INTO EMP2
VALUES (NEXT VALUE FOR MYSEQ, 'AJAY', 14);

INSERT INTO EMP2
VALUES (NEXT VALUE FOR MYSEQ, 'BALDEEP', 15);

INSERT INTO EMP2
VALUES (NEXT VALUE FOR MYSEQ, 'GAURAV', 16);

SELECT * FROM EMP2;

DROP PROCEDURE INEMP2 ;
CREATE PROCEDURE INEMP2 @N AS VARCHAR(20), @X AS INT
AS
BEGIN
		INSERT INTO EMP2
		VALUES (NEXT VALUE FOR MYSEQ,@N, @X);

		sELECT * FROM EMP2;
END;

INEMP2 'DEEPAK', 15;
INEMP2 'ROHAN', 16;
INEMP2 'kapil', 17;


DELETE FROM EMP2 WHERE RNO =  10;

CREATE TABLE EMP2
(EID CHAR(5),
NAME VARCHAR(20),
AGE INT);

DROP PROCEDURE INEMP2 ;
CREATE PROCEDURE INEMP2 @N AS VARCHAR(20), @A AS INT
AS
BEGIN
		DECLARE @I AS INT;
		DECLARE @ID AS CHAR(5);
		
		SET @I = (NEXT VALUE FOR MYSEQ);

		IF @I <10 
			SET @ID = CONCAT('E000', @I);
		ELSE IF @I <100 
			SET @ID = CONCAT('E00', @I);		
		ELSE IF @I <1000
			SET @ID = CONCAT('E0', @I);
		ELSE IF @I <10000 
			SET @ID = CONCAT('E', @I);

		INSERT INTO EMP2
		VALUES (@ID , @N, @A);
		
		SELECT * FROM EMP2;	
END;

INEMP2 'RAJAT KUMAR' , 25;
INEMP2 'KOMAL KAPOOR' , 22;
INEMP2 'DEEPAK SHARMA' , 28;

DROP FUNCTION GENID;

CREATE FUNCTION GENID (@C AS CHAR(1), @X AS INT)
RETURNS CHAR(5)
AS
BEGIN
		DECLARE @ID AS CHAR(5);

		SELECT @ID = CASE
						WHEN @X < 10 THEN CONCAT(@C, '000', @X)
						WHEN @X < 100 THEN CONCAT(@C, '00', @X)
						WHEN @X < 1000 THEN CONCAT(@C, '0', @X)
						WHEN @X < 10000 THEN CONCAT(@C,  @X)
						ELSE 
						NULL
		END;
		RETURN @ID;
END;

SELECT DBO.GENID('S', 10);

CREATE PROCEDURE INEMP2 @N AS VARCHAR(20), @X AS INT
AS
BEGIN
		DECLARE @I AS INT;
		DECLARE @NO AS CHAR(5);
		
		SET @I = (NEXT VALUE FOR MYSEQ);
		SET @NO = DBO.GENID('E', @I);
		
		INSERT INTO EMP2
		VALUES (@NO, @N,@X);

		SELECT * FROM EMP2;
END;

INEMP2 'RAMESH GUPTA', 29;
INEMP2 'AMIT SOOD', 31;


CREATE TABLE PRODUCT 
(PID CHAR(5),
PDESC VARCHAR(30),
PRICE INT);

CREATE TABLE STOCK
(PID CHAR(5),
SQTY INT);

CREATE TABLE ORDERS
(OID CHAR(5),
CID CHAR(5),
PID CHAR(5),
QTY INT);

DELETE PRODUCT
;
INSERT INTO PRODUCT VALUES ('P0001', 'DELL MOUSE', 350);
INSERT INTO PRODUCT VALUES ('P0002', 'DELL KEYBOARD', 590);
INSERT INTO PRODUCT VALUES ('P0003', 'SAMSUNG 21" LED MONITIR', 6500);
INSERT INTO PRODUCT VALUES ('P0004', '8GB DDR4 RAM', 2700);
INSERT INTO PRODUCT VALUES ('P0005', 'HP I5 LAPTOP', 67000);

SELECT * FROM PRODUCT;
INSERT INTO STOCK VALUES ('P0001', 200);
INSERT INTO STOCK VALUES ('P0002', 100);
INSERT INTO STOCK VALUES ('P0003', 100);
INSERT INTO STOCK VALUES ('P0004', 100);
INSERT INTO STOCK VALUES ('P0005', 50);

SELECT * FROM PRODUCT;
SELECT * FROM STOCK;
SELECT * FROM ORDERS;

INSERT INTO ORDERS 
VALUES ('O0001','C0001', 'P0001', 20);

INSERT INTO ORDERS 
VALUES ('O0002','C0002', 'P0001', 20);

INSERT INTO ORDERS 
VALUES ('O0003','C0003', 'P0002', 10);

INSERT INTO ORDERS 
VALUES ('O0004','C0004', 'P0003', 20);

INSERT INTO ORDERS 
VALUES ('O0005','C0005', 'P0004', 10);

INSERT INTO ORDERS 
VALUES ('O0006','C0006', 'P0003', 50);

INSERT INTO ORDERS 
VALUES ('O0007','C0001', 'P0003', 40);

INSERT INTO ORDERS 
VALUES ('O0008','C0006', 'P0004', 50);

INSERT INTO ORDERS 
VALUES ('O0009','C0006', 'P0004', 20);
INSERT INTO ORDERS 
VALUES ('O0010','C0001', 'P0004', 5);
INSERT INTO ORDERS 
VALUES ('O0011','C0005', 'P0004', 5);

SELECT * FROM STOCK;
SELECT * FROM ORDERS;

UPDATE ORDERS SET QTY = 10
WHERE OID =  'O0011';

drop TRIGGER TR_IN_ORD;

CREATE TRIGGER TR_IN_ORD
ON ORDERS
FOR INSERT
AS
BEGIN
		set nocount on;
		UPDATE STOCK 
		SET SQTY = SQTY - (SELECT QTY FROM INSERTED)
		WHERE PID = (SELECT PID FROM INSERTED);
END;

CREATE TRIGGER TR_DELL_PRO
ON PRODUCT
FOR DELETE 
AS
BEGIN
		DELETE FROM STOCK 
		WHERE PID = (SELECT PID FROM DELETED);
END;

DELETE FROM PRODUCT
WHERE PID = 'P0005';

CREATE TRIGGER TR_UP_STK
ON ORDERS
FOR UPDATE
AS
BEGIN
		DECLARE @NQ AS INT;
		DECLARE @OQ AS INT;

		SET @NQ = (SELECT QTY FROM INSERTED);
		SET @OQ =  (SELECT QTY FROM DELETED);

		UPDATE STOCK SET SQTY = SQTY + @OQ - @NQ
		WHERE PID = (SELECT PID FROM INSERTED);
END;

DROP TRIGGER TR_IN_ORD;
CREATE TRIGGER TR_IN_ORD
ON ORDERS
FOR INSERT 
AS
BEGIN

		DECLARE @QR AS INT;
		DECLARE @QS AS INT;

		SET @QR = (SELECT QTY FROM INSERTED);
		SET @QS = (SELECT SQTY FROM STOCK 
					WHERE PID =(SELECT PID FROM INSERTED));

		IF @QS >= @QR
			BEGIN
				UPDATE STOCK SET SQTY = SQTY - @QR
				WHERE PID = (SELECT PID FROM INSERTED);

				COMMIT;
				PRINT('ORDER ACCEPTED');
			END;
			ELSE
				BEGIN
					ROLLBACK;
					PRINT ('INSUFFICIENT QUANTITY : ORDER REJECTED');			
				END;
END;
